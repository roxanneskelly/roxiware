<%= content_tag(:article, :class=>"post_listing") do 
   render(:partial=>"roxiware/blog/post/post", :locals=>{:post=>@post, :index=>false, :show_full_content=>true, :show_full_header=>true}) + 
   content_tag(:div, :class=>"post_footer") do
       result = "".html_safe
       if can?(:read_comments, @post) 
	   result += content_tag(:a, :href=>@post.post_link+"#comments", :class=>"comments_link") do 
               content_tag(:div, @post.comment_count, :class=>((@post.comment_count == 1) ? "comments_count comments_singular" : "comments_count comments_plural")) +
	       (can?(:edit, @post) ? content_tag(:div, @post.pending_comment_count, :class=>((@post.pending_comment_count == 1) ? "pending_comments_count comments_singular" : "pending_comments_count comments_plural")) : "")
           end
	   result += render(:partial=>"roxiware/shared/comment_form", :locals=>{:additional_fields=>""}) if (can?(:comment, @post) && @show_comments)
           result += content_tag(:a, "", :name=>"comments")
	   result += content_tag(:div, raw(Roxiware::CommentHelper.display_comments(@comments, :allow_reply=>can?(:comment, @post), :allow_edit=>can?(:edit, @post), :comment_header_format=>@comment_header_format, :comment_date_format=>@comment_date_format)), :class=>"comments") if @comments.present? && @show_comments
       end
       result
    end
end %>
<% if can? :edit, @post %>
<ul id="blog_show_application_menu" class="application_menu"><li><a rel="<%= edit_blog_post_path(@post) %>" form="Edit Post"><span aria-hidden="true" class="icon-file"></span>&nbsp;Post</a><ul>
<li><a rel="<%= edit_blog_post_path(@post) %>" form="Edit Post"><span aria-hidden="true" class="icon-quill"></span>&nbsp;Edit</a></li>
<li><a id="delete_post_app_menu">Delete</a></li>
</ul></li></ul>
<%= render :partial=>"roxiware/blog/post/context_menus" %>
<% end %>

<script>
$(document).ready(function() {
<% if can? :delete, @post %>
    $("#delete_post_app_menu").click(function() {
        $(".post").trigger("context_menu", "delete_post");
    });
<% end %>

<% if @show_comments && can?(:comment, @post) %>
    var csrf_token = $('meta[name="csrf-token"]').attr('content');
    var csrf_param = $('meta[name="csrf-param"]').attr('content');

    var root_comment_form = $(".comment_form");
    root_comment_form.attr("id", "root_form");
    
    initCommentForm("<%= comment_index_path %>.json", <%= @post.id %>, "Roxiware::Blog::Post");

    /* Move the comment form when comment_reply is clicked */ 
    $("a.comment_reply").click(function() {
        var parent_id = $(this).parents("[comment_id]").attr("comment_id");
        var form_div = $(".comment_form");
        form_div.attr("id", "reply_to_"+parent_id);
        form_div.find("input[name=parent_id]").val(parent_id);
        $(this).after(form_div);
        resetCommentForm();
     });

<% end %>

<% if can? :edit, @post %>
    $(".manage_comment").each(function(index, menu) {
	ddsmoothmenu.init({
	    mainmenuid: $(this).attr("id"),
            rightalign: true,
	    orientation: 'h',
	    classname: 'manage_menu',
	    contentsource: "markup"
	});
    });

    /* Handle publish/hide */
    $(".manage_comment .publish_comment, .manage_comment .hide_comment").click(function() {
        if($(this).parent().is(".selected_item")) {
            return;
        }
        var manage_comment = $(this).parents("[comment_id]").first();
        var self = $(this);
        var comment_id = manage_comment.attr("comment_id");
        var upload_params = {comment_status:$(this).is(".publish_comment")?"publish":"moderate"};
        if (csrf_param !== undefined && csrf_token !== undefined) {
            upload_params[csrf_param] = csrf_token;
        };

	$.ajax("/comment/"+comment_id+".json", {
		type:"PUT",
                data: upload_params,
	       error: function(xhr, textStatus, errorThrown) {
	                  $.error(errorThrown);
		      },
	       complete: function() {
		       },
	       success: function(data) {
			    if(data["error"]) {
			        $(data["error"]).each(function(index, value) {
				    $.error(value[1])
				    comment_form.find("input#"+value[0]).css("background", "#ffcccc");
			        });
			    }
			    else {
                                manage_comment.find(".manage_menu .publish_comment, .manage_menu .hide_comment").parent().toggleClass("selected_item");
                                manage_comment.find(".comment_moderate_indicator").first().toggleClass("comment_status_publish").toggleClass("comment_status_moderate");
		            }
                        }

        });
    });

    /* Handle delete */
    $(".manage_comment .delete_comment").click(function() {
        var blog_comment_id = $(this).parents("[comment_id]").attr("comment_id");
        var delete_params = {}
        if (csrf_param !== undefined && csrf_token !== undefined) {
            delete_params[csrf_param] = csrf_token;
        };
	$.ajax("<%= comment_index_path %>/"+blog_comment_id+".json", {
	       type:"DELETE",
               data: delete_params,
	       error: function(xhr, textStatus, errorThrown) {
	                  $.error(errorThrown);
		      },
	       complete: function() {
		       },
	       success: function(data) {
			    if(data["error"]) {
			        $(data["error"]).each(function(index, value) {
				    $.error(value[1])
				    comment_form.find("input#"+value[0]).css("background", "#ffcccc");
			        });
			    }
			    else {
			        window.location.reload();
		            }
                        }
        });
    });
<% end %>
});
</script>
<%= render :partial=>"roxiware/blog/post/post_manage_control" %>
