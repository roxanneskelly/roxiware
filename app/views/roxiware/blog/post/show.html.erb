<section class="post_listing">
   <%= render :partial=>"roxiware/blog/post/post", :locals=>{:post=>@post, :index=>false, :show_full_content=>true, :show_full_header=>true} %>
   <div class="post_footer">
       <hr class="post_separator"/>
        <% if can?(:read_comments, @post) %>
	   <%= content_tag(:div, @post.comment_count, :class=>((@post.comment_count == 1) ? "comment_count comments_singular" : "comment_count comments_plural")) %>
	   <%= content_tag(:div, @post.pending_comment_count, :class=>((@post.pending_comment_count == 1) ? "pending_comment_count comments_singular" : "pending_comment_count comments_plural")) if can?(:edit, @post) %>
	   <% if @comments.present?
                  can_reply = can? :comment, @post 
	          can_manage = can? :edit, @post %>
	       <div class="comments">
	         <%= raw Roxiware::CommentHelper.display_comments(@comments, :allow_reply=>can_reply, :allow_edit=>can_manage, :comment_date_format=>@post_date_format) %>
	       </div>
           <% end %>
	   <% if can? :comment, @post %>
	       <%= render :partial=>"roxiware/shared/comment_form", :locals=>{:additional_fields=>""} %>
	   <% end %>
	 <% end %>
    </div>
</section>

<% if can? :edit, @post %>
<ul id="blog_show_application_menu" class="application_menu"><li><a rel="<%= edit_blog_post_path(@post) %>" form="Edit Post"><span aria-hidden="true" class="icon-file"></span>&nbsp;Post</a><ul>
<li><a rel="<%= edit_blog_post_path(@post) %>" form="Edit Post"><span aria-hidden="true" class="icon-quill"></span>&nbsp;Edit</a></li>
<li><a id="delete_post_app_menu">Delete</a></li>
</ul></li></ul>
<%= render :partial=>"roxiware/blog/post/context_menus" %>
<% end %>

<script>
$(document).ready(function() {

<% if can? :delete, @post %>
    $("#delete_post_app_menu").click(function() {
        $(".post").trigger("context_menu", "delete_post");
    });
<% end %>

<% if can? :comment, @post %>
    var csrf_token = $('meta[name="csrf-token"]').attr('content');
    var csrf_param = $('meta[name="csrf-param"]').attr('content');

    var root_comment_form = $(".comment_form");
    root_comment_form.attr("id", "root_form");
    
    initCommentForm("<%= comment_index_path %>.json", <%= @post.id %>, "Roxiware::Blog::Post");

    /* Move the comment form when comment_reply is clicked */ 
    $("a.comment_reply").click(function() {
        var parent_id = $(this).parents("[comment_id]").attr("comment_id");
        var form_div = $(".comment_form");
        form_div.attr("id", "reply_to_"+parent_id);
        form_div.find("input[name=parent_id]").val(parent_id);
        $(this).after(form_div);
     });

<% end %>

<% if can? :edit, @post %>
    $(".manage_comment").each(function(index, menu) {
	ddsmoothmenu.init({
	    mainmenuid: $(this).attr("id"),
            rightalign: true,
	    orientation: 'h',
	    classname: 'manage_menu',
	    contentsource: "markup"
	});
    });

    /* Handle publish/hide */
    $(".manage_comment .publish_comment, .manage_comment .hide_comment").click(function() {
        if($(this).parent().is(".selected_item")) {
            return;
        }
        var manage_comment = $(this).parents("[comment_id]").first();
        var self = $(this);
        var blog_comment_id = manage_comment.attr("comment_id");
        var upload_params = {comment_status:$(this).is(".publish_comment")?"publish":"moderate"};
        if (csrf_param !== undefined && csrf_token !== undefined) {
            upload_params[csrf_param] = csrf_token;
        };

	$.ajax("<%= blog_post_comment_path(@post.id) %>/"+blog_comment_id+".json", {
		type:"PUT",
                data: upload_params,
	       error: function(xhr, textStatus, errorThrown) {
	                  $.error(errorThrown);
		      },
	       complete: function() {
		       },
	       success: function(data) {
			    if(data["error"]) {
			        $(data["error"]).each(function(index, value) {
				    $.error(value[1])
				    comment_form.find("input#"+value[0]).css("background", "#ffcccc");
			        });
			    }
			    else {
                                manage_comment.find(".manage_menu .publish_comment, .manage_menu .hide_comment").parent().toggleClass("selected_item");
                                manage_comment.find(".comment_moderate_indicator").first().toggleClass("comment_status_publish").toggleClass("comment_status_moderate");
		            }
                        }

        });
    });



    /* Handle delete */
    $(".manage_comment .delete_comment").click(function() {
        var blog_comment_id = $(this).parents("[comment_id]").attr("comment_id");
        var delete_params = {}
        if (csrf_param !== undefined && csrf_token !== undefined) {
            delete_params[csrf_param] = csrf_token;
        };
	$.ajax("<%= blog_post_comment_path(@post.id) %>/"+blog_comment_id+".json", {
	       type:"DELETE",
               data: delete_params,
	       error: function(xhr, textStatus, errorThrown) {
	                  $.error(errorThrown);
		      },
	       complete: function() {
		       },
	       success: function(data) {
			    if(data["error"]) {
			        $(data["error"]).each(function(index, value) {
				    $.error(value[1])
				    comment_form.find("input#"+value[0]).css("background", "#ffcccc");
			        });
			    }
			    else {
			        window.location.reload();
		            }
                        }
        });
    });
<% end %>
});
</script>
<%= render :partial=>"roxiware/blog/post/post_manage_control" %>
