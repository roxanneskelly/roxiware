<section class="post">
    <div class="blog_nav">
      <%= link_to("<< Previous Post", @prev_post_link, :class=>"prev_post") if @prev_post_link %>
      <%= link_to("Next Post >>", @next_post_link, :class=>"next_post") if @next_post_link %>
    </div>
   <%= render :partial=>"post", :locals=>{:post=>@post, :index=>false, :show_full_content=>true, :show_full_header=>true} %>
   <% if can? :read_comments, @post %>
       <% can_reply = can? :comment, @post 
	  can_manage = can? :edit, @post %>
       <% if can_reply %>
         <%= content_tag(:div, "Reply", {:id=>"reply-to-0", :class=>"comment_reply"}) %>
       <% end %>
       <div class="comments">
         <%= raw Roxiware::Blog::PostsHelper.display_comments(@comments, :allow_reply=>can_reply, :allow_edit=>can_manage) %>
       </div>
     <% end %>
</section>
<div class="comment_form_template"><div class="comment_form_cancel">Cancel</div>
  <%= form_tag blog_post_comment_index_path(@post.id) do %>
     <%= hidden_field_tag :parent_id %>
     <div><%= text_area_tag :comment_content, nil, :class=>"comment_form_content" %></div>
     <% if !user_signed_in? %>
       <div><%= label_tag :comment_author, "Name", :class=>"comment_form_author_name" %>
            <%= text_field_tag :comment_author, nil, :class=>"comment_form_author_name" %></div>
       <div><%= label_tag :comment_author_url, "URL", :class=>"comment_form_author_url" %>
            <%= text_field_tag :comment_author_url, nil, :class=>"comment_form_author_url" %></div>
       <div><%= label_tag :comment_author_email, "Email", :class=>"comment_form_author_email" %>
            <%= text_field_tag :comment_author_email, nil, :class=>"comment_form_author_email" %><span class="comment_email_notice last">Email will not be displayed</span></div>
     <% end %>
     <%= submit_tag "Post" %>
  <% end %>
</div>
<%= render :partial=>"edit_post", :locals=>{:index=>true} if ((can? :edit, Roxiware::Blog::Post) || (can? :create, Roxiware::Blog::Post)) %>

<script>
$(document).ready(function() {
    var csrf_token = $('meta[name="csrf-token"]').attr('content');
    var csrf_param = $('meta[name="csrf-param"]').attr('content');

    $("div.comment_reply").click(function() {
        $(".comment_form").remove();
        var blog_comment_id = $(this).attr("id").split("-")[2];
        var form_div = $(".comment_form_template").clone().addClass("comment_form").removeClass("comment_form_template").insertAfter($(this));
        form_div.find("input[name=parent_id]").val(blog_comment_id);
        form_div.find(".comment_form_cancel").click(function() {
           form_div.remove();
        });
     });
    $("div.comment").on("change", "input[type=checkbox]", function() {
        var blog_comment_id = $(this).attr("comment");
        var upload_params = {comment_status:$(this).attr("checked")?"publish":"moderate"};
        if (csrf_param !== undefined && csrf_token !== undefined) {
            upload_params[csrf_param] = csrf_token;
        };

       $.ajax("<%= blog_post_comment_index_path(@post.id) %>" + "/"+blog_comment_id, {
						type:"PUT",
				                data: upload_params,
						error: function (jqXHR, textStatus, errorThrown) {
						    $.error(errorThrown);
                                                    window.location.reload();
						  }
		  });
    });
    $("div.comment_permissions").on("change", "select", function() {
        var upload_params = {comment_permissions:$(this).val()};
        if (csrf_param !== undefined && csrf_token !== undefined) {
            upload_params[csrf_param] = csrf_token;
        };
       $.ajax("<%= blog_post_index_url %>/"+$(this).attr("post"), {
						type:"PUT",
				                data: upload_params,
						error: function (jqXHR, textStatus, errorThrown) {
						    $.error(errorThrown);
                                                    window.location.reload();
						  }
						});
          });

});
</script>
