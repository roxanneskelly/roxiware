<%= content_tag(:div, :id=>"book_edit_form", :class=>"huge_form") do
    content_tag(:div, :class=>"tab_form") do
        content_tag(:ul, :class=>"tabs") do
            #content_tag(:li, content_tag(:a, "Import", :href=>"#")) +
            content_tag(:li, content_tag(:a, "Edit", :href=>"#")) # +
            #content_tag(:li, content_tag(:a, "Purchase Settings", :href=>"#"))
        end + 
        content_tag(:div, :class=>"panes") do
            content_tag(:div, :id=>"import_pane", :class=>"settings_section") do
                content_tag(:h2, "Import your book.") +
	            search_field_helper(:import, "", :watermark=>"ISBN, Book Title, Goodreads Link, Amazon Link", :class=>"search_field") +
                content_tag(:div, "", :id=>"import_search_status") +
                content_tag(:div, :id=>"import_search_results", :class=>"list_box") do
                    content_tag(:div, "", :class=>"list_box_contents");
                end
            end # +
            content_tag(:div, :id=>"book_description_pane") do
                content_tag(:div, :class=>"settings_section", :style=>"position:relative") do
                    form_for(@book) do |book|
                        render(:partial=>"roxiware/books/book_edit") +
                        content_tag(:div, button_tag("Save", :id=>"save_button", :type=>"button", :class=>"save_button", :disabled=>true), :class=>"dialog_buttons")
                    end
                end 
            end +
            content_tag(:div,  :id=>"book_purchase_pane", :class=>"settings_section") do
                content_tag(:h2, "Purchase settings.") +
	            content_tag(:div, :id=>"book_purchase_form") do
		            content_tag(:div, :id=>"bookstore_left_section") do
                        content_tag(:div, :id=>"bookstore_edit_tree", :class=>"tree_box") do
                            content_tag(:div, "", :id=>"bookstore_list_content", :class=>"tree_box_content", :tabindex=>1) +
		                    content_tag(:div, :id=>"bookstore_list_edit_bar", :class=>"edit_bar") do
                                content_tag(:div, content_tag(:span, "+", :class=>"icon-book"), :id=>"new_edition", :class=>"edit_bar_button") +
                                content_tag(:div, content_tag(:span, "", :class=>"icon-remove"), :id=>"delete_edition", :class=>"edit_bar_button")
                            end
                        end
                    end
                    content_tag(:div, :id=>"bookstore_right_section") do
                        content_tag(:div, :id=>"edition_name_field", :class=>"param-field") do
                            label_tag(:name) +
                            text_field_tag(:name, "", :watermark=>"Edition Name")
                        end
                        content_tag(:div, :id=>"link_field", :class=>"param-field") do
                            label_tag(:link) +
                            text_field_tag(:name, "", :watermark=>"Paste your link here")
                        end
                    end
                end +
                content_tag(:div, button_tag("Save", :id=>"save_button", :type=>"button", :class=>"save_button"), :class=>"dialog_buttons")
            end
        end
    end
end %>
<script>
  <% bookstores = []
     bookstores = @book.get_param("bookstores").a if @book.get_param("bookstores")
   %>
  $(function() {
     $("#book_edit_form ul.tabs").tabs($("div.panes > div"));


     $("#skip_import").click(function() {
        $("#book_edit_form ul.tabs").data("tabs").next();
     });

     $("#book_edit_form input#import_search").bind("input blur propertychange", function(){
          if ($(this).is(".watermark")) {
               $("#book_edit_form button#import_search").button("disable");
          }
          else {
               $("#book_edit_form button#import_search").button("enable");
          }
     });

     $("#book_edit_form #book_description").html("<%= (@book.description || "").html_safe %>");
     $("img#book_upload_image").attr("src", "<%= @book.large_image %>");
     $("input#book_large_image").val("<%= @book.large_image %>");

     $("#save_button").require_fields("#book_title");
     $("#book_edit_form ul.tabs").tabs($("div.panes > div"));
     <% if params[:id] %>
        $("#book_edit_form ul.tabs").data("tabs").next();
     <% end %>
     $("#book_edit_form button").button();

      var bookstore_map = <%= raw bookstores.collect{|bookstore| bookstore.to_jstree_data}.to_json %>
      var jstree = $("#book_edit_form #bookstore_edit_tree #bookstore_list_content");
      var stores = <%= raw Roxiware::Book::STORES.to_json %>;
      $(jstree).jstree_param(bookstore_map, {
                             description_guid: "6C16D934-0643-48EC-806C-95BDAF52E078",
                             objects: {
                               "E59B2EB2-6867-475D-A691-ABF1A68E5BE7": { /* bookstore */
                                   valid_children:["4014F256-277D-4B58-8375-E1560524EA20"],
                                   children_guid:"E73E1207-CB64-44AB-8F1C-2032AD6A34B4",
                                   title: function(params) {
                                      return stores[params["store_id"].value];
                                   },
                                   init_params: {
                                   }
                               },
                               "4014F256-277D-4B58-8375-E1560524EA20": { /* edition */
                                   valid_children: "none",
                                   title: "name",
                                   init_params: {
                                      link: {
                                         value: "",
                                         guid:"2BEBB288-5015-4D05-A3A1-224EE4D3D37F"
                                      },
                                      name: {
                                         value: "Paperback",
                                         guid:"89E14824-F9E5-46EA-9A73-584997D972B2"
                                      }
                                   }
                               }
                         }
       });

      $(".book_edit input").bind("change", function () {
        if ($(".book_edit input#book_isbn").val() || $(".book_edit input#book_isbn13").val()) {
            $(".book_edit button#import_button").button("enable");
        }
        else {
            $(".book_edit button#import_button").button("disable");
        }
      });

     $("#book_edit_form input#import").bind("keypress", function(event) {
         if(event.keyCode == 13) {
             $("#book_edit_form button#import").click();
         }
     });
   $("#book_edit_form button#import").click(function(event) {
       var search_val = $("#book_edit_form input#import").val();
       var endpoint = "<%= import_books_path %>.json?search="+escape(search_val);
       $("#import_search_status").html("Searching...");
       $.getJSON(endpoint,
                 function(data) {
                     $("div#import_search_results div.list_box_content").html("");
                     $("#import_search_status").html("Pick your book");
                     if(data.length > 0) {
                         $.each(data, function(index, book) {
                             var authors = $("<div class='search_results_authors'></div>");
                             $.each(book['authors'], function(index, author) {
                                 authors.append("<div class='search_result_author'>"+author['author_name']+"</div>");
                             });
			                 var book_html = $("<div class='search_result list_box_item'><div class='book_info'><img src='"+book["thumbnail"]+"'/>"+
                                               "<div class='search_result_title'>"+book["title"]+"</div>"+
                                               authors.html()+
	                                          "<br style='clear:both'/></div>");
			                 book_html.data().book_data = book;
			                 $("div#import_search_results div.list_box_content").append(book_html)
			             });
                         $("#import_search_results .search_result").click(function() {
                             var goodreads_id = $(this).data().book_data.goodreads_id;
                             var endpoint = "<%= new_book_path %>.json?goodreads_id="+goodreads_id;
                             $.getJSON(endpoint,
                                       function(book) {
                                           updateBookForm(book);
                                           $(jstree).jstree_param().reload(data["bookstores[]"]);
                                           $("ul.tabs").data("tabs").next();
                                });
                          });
                       }
                       else {
                          $("div#import_search_status").html("<div class='no_results'>No books found.  Try another ISBN, Title or Link.</div>");
                       }
         });
    });
     
  

     $(jstree).bind("select_node.jstree", function(event, data) {
        var currently_selected = $(jstree).jstree("get_selected");
        var type = jQuery.jstree._reference($(jstree))._get_type(currently_selected);
        if(type == "4014F256-277D-4B58-8375-E1560524EA20") {
           $("#bookstore_right_section input[name=link]").val(currently_selected.data().params.link.value);
           $("#bookstore_right_section input[name=name]").val(currently_selected.data().params.name.value);
           $("#bookstore_right_section").css("display", "inline-block");
        }
        else {
          $("#bookstore_right_pane").css("display","none");
        }
      });
      $("#bookstore_right_section input").bind("change", function() {
         var currently_selected = $(jstree).jstree("get_selected");
         var type = jQuery.jstree._reference($(jstree))._get_type(currently_selected);
         if(type == "4014F256-277D-4B58-8375-E1560524EA20") {
            if($(this).attr("name") == "link") {
               currently_selected.data().params[$(this).attr("name")].value = $(this).val();
            }
            else {
               currently_selected.data().params[$(this).attr("name")].value = $(this).val();
            }
            $(currently_selected).trigger("data_changed.jstree_param");
         }
      });
      $("#bookstore_right_section input[name=link]").bind("change", function() {
         var currently_selected = $(jstree).jstree("get_selected");
         var type = jQuery.jstree._reference($(jstree))._get_type(currently_selected);
         if(type == "4014F256-277D-4B58-8375-E1560524EA20") {
            currently_selected.data().params[$(this).attr("name")].value = $(this).val();
            $(currently_selected).trigger("data_changed.jstree_param");
         }
      });

      $("#bookstore_edit_tree #delete_edition").click(function() {
         var currently_selected = $(jstree).jstree("get_selected");
         if (currently_selected) {
            var type = jQuery.jstree._reference($(jstree))._get_type(currently_selected);
            if(type == "4014F256-277D-4B58-8375-E1560524EA20") {
               $(jstree).jstree("delete_node", currently_selected);
            }
         }
      });

      $("#bookstore_edit_tree #new_edition").click(function() {
         var currently_selected = $(jstree).jstree("get_selected");
         var type = jQuery.jstree._reference($(jstree))._get_type(currently_selected);
        if(type == "4014F256-277D-4B58-8375-E1560524EA20") {
           $(jstree).jstree_param().new_node("4014F256-277D-4B58-8375-E1560524EA20", currently_selected, "after");
        }
        else {
           $(jstree).jstree_param().new_node("4014F256-277D-4B58-8375-E1560524EA20", currently_selected, "inside");
        }
      });

    $("#book_edit_form #save_button").click(function() {
        console.log("click");
<% if @book.id.present? %>
        var endpoint = "<%= book_path(@book.id) %>.json";
	    var method = "PUT";
<% else %>
	    var endpoint = "<%= books_path %>.json";
        var method="POST";
<% end %>
        $("#book_edit_form form input.watermark").val("");
        var book_data = $("#book_edit_form form").serializeArray();
        book_data.push({name:"book[description]", value:$("#book_edit_form #book_description").html()});
        $.ajaxSetParamsJSON(endpoint, book_data,
                            {
                                method:method,
                                success:function() {
                                    window.location.reload();
                            }});
      });
});
</script>
