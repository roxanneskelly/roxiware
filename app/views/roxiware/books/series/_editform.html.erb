<div id="series_edit_form" class="large_form">
  <% if @series.id.blank? %>
      <div class="tab_form">
	  <ul class="tabs">
	    <li><a href="#">Import</a></li>
	    <li><a href="#">Edit</a></li>
	  </ul>
	  <div class="panes">
	      <div id="import_pane">
		  <div class="wizard_step">Import your series.</div>
		  <div class="wizard_instructions">Paste or type the title, ISBN, or ISBN13 of a book in the series, a Goodreads or Amazon link to the book, the series title, the author name, or a Goodreads link to the series.</div>
		  <div id="import_search_field"><%= text_field_tag(:import_search, "", {:watermark=>"Member ISBN, Member Book Title, Goodreads Book or Series Link, Amazon Link", :class=>"search_field"}) %><%= button_tag :id=>"import_search", :type=>"button", :class=>"search_button", :disabled=>"disabled" do %><span class="icon-search"></span>&nbsp;Search<% end %></div>
		  <div id="import_search_status"></div>
		  <div id="import_search_results" class="list_box"><div class="list_box_content"></div></div>
	      </div>
	      <div id="edit_pane">
		 <%= form_for @series do |series_fields| %>
		      <%= render :partial=>"roxiware/books/series/series_edit", :locals=>{:series_fields=>series_fields} %>
		 <% end %>
	      </div>
	  </div>
       </div>
   <% else %>
       <%= form_for @series do |series_fields| %>
           <%= render :partial=>"roxiware/books/series/series_edit", :locals=>{:series_fields=>series_fields} %>
	<% end %>
   <% end %>
   <%= button_tag "Save", :id=>"save_button", :type=>"button", :class=>"save_button" %>
</div>

<script>
  $(function() {
     $("#series_edit_form ul.tabs").tabs($("div.panes > div"));

     <% if @series.id.blank? %>
	 $("#series_edit_form button#import_search").button();
	 $("#series_edit_form input#import_search").watermark();
	 $("#series_edit_form input#import_search").bind("input blur propertychange", function(){
	      if ($(this).is(".watermark")) {
		   $("#series_edit_form button#import_search").button("disable");
	      }
	      else {
		   $("#series_edit_form button#import_search").button("enable");
	      }
	 });

	$("#series_edit_form input#import_search").bind("keypress", function(event) {
	     if(event.keyCode == 13) {
	       $("button#import_search").click();
	     }
	});
	populate_series(<%= raw @series.book_ids.to_json %>);


	$("button#import_search").click(function() {
	     var search_val = $("input#import_search").val();
	     var endpoint = "<%= import_book_series_index_path %>.json?search="+escape(search_val);
	     $("#import_search_status").html("Searching...");
	     $.getJSON(endpoint,
		       function(data) {
			   $("div#import_search_results div.list_box_content").html("");
			   $("#import_search_status").html("Click on your series");

			   if(data.length > 0) {
			       $.each(data, function(index, series) {
				  var authors_map = {}
				  var authors_id_count = {}
				  var series_books = "<div class='series_books'>";
				  $.each(series["books"], function(index, book) {
				     var insert = (index?", ":"");
				     if(index <= 5) {
					series_books = series_books + insert+book["title"];
				     }
				     $.each(book.authors, function(index, author) {
					 authors_map[author.goodreads_id] = author.author_name;
					 if(authors_id_count[author.goodreads_id]) {
					     authors_id_count[author.goodreads_id][0] = authors_id_count[author.goodreads_id][0]+1;
					 }
					 else {
					     authors_id_count[author.goodreads_id] = [1, author.author_name];
					 }
				     });
				  });

				  var authors_by_count = [];
				  $.each(authors_id_count, function(author_id, count_info) {
				      authors_by_count.push([count_info[0], {goodreads_id:author_id, name:count_info[1]}]);
				  });

				  authors_by_count = authors_by_count.sort().reverse();


				  if (series["books"].length > 5) {
					series_books = series_books + "...";
				  }
				  series_books = series_books+"</div>";

				  var authors = $("<div class='authors'>,&nbsp;by&nbsp;</div>")
				  authors.append(authors_by_count[0][1].name);
				  if(authors_by_count.length > 1) {
				      authors.append(" and others");
				  }
				  var series_html_root = $("<div class='search_result list_box_item'>");
				  var series_html = $("<div class='series_info'/>");
				  if(series["image"]) {
				     series_html.append("<img src='"+series["image"]+"'/>");
				  }
				  series_html.append("<div class='search_result_title'>"+series["title"]+"</div>");
				  series_html.append(authors);
				  series_html.append("<br/>");
				  series_html.append($(series_books));
				  series_html.append("<br style='clear:both'/>");
				  series_html_root.append(series_html);
				  series_html_root.data().series_data = series;
				  $("div#import_search_results div.list_box_content").append(series_html_root)
			       });
			       $("div#import_search_results .search_result").click(function() {
				   var goodreads_id = $(this).data().series_data.goodreads_id;
				   var endpoint = "<%= import_book_series_index_path %>.json?goodreads_id="+goodreads_id;
				   var series_books = $("div#series_books");
				   var current_books = $("div#current_books");
				   current_books.append(series_books.find(".series_book[book_id]"));
				   current_books.find(".series_book").each(function(index, book) {
				      if($(book).attr("book_id") === undefined) {
					 $(book).remove();
				      }
				   });
				   series_books.html("");
				   $.getJSON(endpoint,
				      function(data) {
					 $("#series_details_form input#book_series_title").val(data.title);
					 $("#series_details_form input#goodreads_id").val(data.goodreads_id);
					 $("#series_details_form textarea#book_series_description").html(data.description);
					 $("#series_details_form textarea").wysiwyg("setContent", data.description);
					 if(data.books) {
					    $.each(data.books, function(index, book) {
						var series_book = current_books.find(".series_book[goodreads_id='"+book.goodreads_id+"']");
						if(series_book.length == 0) {
						    series_book = $("<div class='series_book draggable_tile' goodreads_id='"+book.goodreads_id+"' title='"+book.title+"''/>");
						    series_book.append("<span class='ui-icon'>&nbsp;</span>");
						    series_book.append("<div class='book_title'>"+book.title+"</div>");
						}
						if (book.order > 0.0) {
						  series_books.append(series_book);
						}
						else {
						  current_books.append(series_book);
						}
					    });
					 }

					 $("ul.tabs").data("tabs").next();

				   });
			       });
			   }
			   else {
			      $("div#import_search_status").html("<div class='no_results'>No series found.  Try another ISBN, Title or Link.</div>");
			   }
			}
		      );
	});
    <% end %>
      $("#series_edit_form button.save_button").click(function() {
         var post_data = $("#series_edit_form form").serializeArray();
         books = [];
	 $("div#series_books .series_book").each(function(index, book) {
             var book_id = $(book).attr("book_id");
             var goodreads_id = $(book).attr("goodreads_id");
   	     if(book_id) {
                 post_data.push({name:"book_series[books]["+index+"][book_id]", value:book_id});
             }
             if(goodreads_id) {
   	        post_data.push({name:"book_series[books]["+index+"][goodreads_id]", value:goodreads_id});
             }
         });

         <% if @series.id.present? %>
	    var endpoint = "<%= book_series_path(@series.id) %>.json";
	    var method = "PUT";
         <% else %>
	    var endpoint = "<%= book_series_index_path %>.json";
            var method="POST";
	 <% end %>
         $.ajax({type:method,
                 processData: true, 
                 url: endpoint,
	         dataType: 'json',
                 data:post_data,
                 success: function() {
                   window.location.reload();
                 }}); 
      });
      

   });
</script>
