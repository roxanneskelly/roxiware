<%= content_tag(:div, :id=>@topic.id, :class=>"forum_topic") do %>
    <%= content_tag(:div, :class=>"forum_topic_header") do %>
        <%= content_tag(:div, @topic.new_post_count, :class=>(@topic.new_post_count > 0) ? "forum_topic_new_posts" : "forum_topic_no_new_posts") %>
        <%= content_tag(:div, @topic.title, :class=>"forum_topic_title") %>
        <%= content_tag(:div, @topic.root_post.comment_date.strftime("%c"), :class=>"forum_topic_post_date") %>
    <% end %>
    <%= content_tag(:div, :class=>"comments") do %>
        <%= raw Roxiware::CommentHelper.display_comments(@comments, :allow_reply=>true, :allow_edit=>(current_user.present? && current_user.is_admin?), :comment_date_format=>"%c") %>
    <% end %>
<% end %>
<% if can? :post, @topic %>
<%= render :partial=>"roxiware/shared/comment_form", :locals=>{:additional_fields=>""} %>
<% end %>
<% if can? :edit, @topic %>
<ul id="topic_show_application_menu" class="application_menu"><li><a rel="<%= forum_edit_topic_path(@topic.board.seo_index, @topic.id) %>" form="Edit Topic"><span aria-hidden="true" class="icon-file"></span>&nbsp;Topic</a><ul>
<li><a rel="<%= forum_edit_topic_path(@topic.board.seo_index, @topic.id) %>" form="Edit Topic"><span aria-hidden="true" class="icon-quill"></span>&nbsp;Edit</a></li>
<% if can? :delete, @topic %><li><a id="delete_forum_topic_app_menu">Delete</a></li><% end %>
</ul></li></ul>
<%= render :partial=>"roxiware/forum/context_menus" %>
<% end %>

<script>
$(function() {

<% if can? :delete, @topic %>
    $("#delete_forum_topic_app_menu").click(function() {
        $(".post").trigger("context_menu", "delete_forum_topic");
    });
<% end %>


    var root_comment_form = $(".comment_form");
    root_comment_form.attr("id", "root_form");


<% if can? :post, @topic %>
    initCommentForm("<%= comment_index_path %>.json", <%= @topic.id %>, "Roxiware::Forum::Topic");

    /* Move the comment form when comment_reply is clicked */ 
    $("a.comment_reply").click(function() {
        var parent_id = $(this).parents("[comment_id]").attr("comment_id");
        var form_div = $(".comment_form");
        form_div.attr("id", "reply_to_"+parent_id);
        form_div.find("input[name=parent_id]").val(parent_id);
        $(this).after(form_div);
     });
<% end %>
<% if can? :edit, @topic %>
    $(".manage_comment").each(function(index, menu) {
	ddsmoothmenu.init({
	    mainmenuid: $(this).attr("id"),
            rightalign: true,
	    orientation: 'h',
	    classname: 'manage_menu',
	    contentsource: "markup"
	});
    });
    /* Handle publish/hide */
    $(".manage_comment .publish_comment, .manage_comment .hide_comment").click(function() {
        console.log("MANAGING");
        if($(this).parent().is(".selected_item")) {
            return;
        }
        var manage_comment = $(this).parents("[comment_id]").first();
        var self = $(this);
        var comment_id = manage_comment.attr("comment_id");
        var upload_params = {comment_status:$(this).is(".publish_comment")?"publish":"moderate"};

	$.ajax("/comment/"+comment_id+".json", {
		type:"PUT",
                data: upload_params,
	       error: function(xhr, textStatus, errorThrown) {
	                  $.error(errorThrown);
		      },
	       complete: function() {
		       },
	       success: function(data) {
			    if(data["error"]) {
			        $(data["error"]).each(function(index, value) {
				    $.error(value[1])
				    comment_form.find("input#"+value[0]).css("background", "#ffcccc");
			        });
			    }
			    else {
                                manage_comment.find(".manage_menu .publish_comment, .manage_menu .hide_comment").parent().toggleClass("selected_item");
                                manage_comment.find(".comment_moderate_indicator").first().toggleClass("comment_status_publish").toggleClass("comment_status_moderate");
		            }
                        }

        });
    });

    /* Handle delete */
    $(".manage_comment .delete_comment").click(function() {
        var manage_comment = $(this).parents("[comment_id]").first();
        var self = $(this);
        var comment_id = manage_comment.attr("comment_id");
        var delete_params = {}
	$.ajax("/comment/"+comment_id+".json", {
	       type:"DELETE",
               data: delete_params,
	       error: function(xhr, textStatus, errorThrown) {
	                  $.error(errorThrown);
		      },
	       complete: function() {
		       },
	       success: function(data) {
			    if(data["error"]) {
			        $(data["error"]).each(function(index, value) {
				    $.error(value[1])
				    comment_form.find("input#"+value[0]).css("background", "#ffcccc");
			        });
			    }
			    else {
			        window.location.reload();
		            }
                        }
        });
    });
<% end %>

});
</script>
