<%
    cat_uls = lambda do |cat_tree|
        result = ""
	cat_tree.keys.sort{|x, y| x.name <=> y.name}.each do |category|
	    children_uls = content_tag(:ul, cat_uls.call(cat_tree[category])) if cat_tree[category].present?
	    result = result + content_tag(:li, content_tag(:a, category.name.split("/").last)+children_uls, :class=>"category_entry", :id=>category.id)
	end
	result.html_safe
    end 
%>

<%= content_tag(:div, :id=>"layout_picker") do
    content_tag(:div, :id=>"template_pane") do
	content_tag(:div, :id=>"template_selector") do
	    content_tag(:li, :id=>"category_list", :class=>"tree_box_content") do
		content_tag(:ul, content_tag(:li, content_tag(:a, "All"), :id=>"0", :class=>"category_entry") + cat_uls.call(@categories))
	    end +
	    content_tag(:div, "", :id=>"template_list")
	end +
	content_tag(:div, :id=>"template_info") do 
	    content_tag(:div, :id=>"template_info_description_pane") do
		content_tag(:div, "", :id=>"template_info_name") +
		content_tag(:div, :id=>"template_info_buttons") do
		    button_tag("Preview", :id=>"preview_template", :type=>"button", :class=>"preview_template_button") +
		    (button_tag("Install", :id=>"install_template", :type=>"button", :class=>"install_template_button") if show_install)
		end +
		content_tag(:div, "", :id=>"template_info_description") 
	    end +
	    content_tag(:div, :id=>"template_info_schemes_pane") do
		content_tag(:div, "Color Schemes", :class=>"template_info_label_text") +
		content_tag(:div, "", :id=>"template_info_schemes") +
		content_tag(:div, :id=>"template_info_scheme_nav") do
		    content_tag(:div, "", :id=>"template_info_scheme_dots") 
		end 
	    end 
	end 
    end
end %>

<script id="template_item_template" type="text/html">
<%= content_tag(:div, :class=>"template_item", :style=>"display:inline-block") do
    content_tag(:div, "", :class=>"template_item_name") +
    tag(:img, :class=>"template_item_image") 
end %>
</script>
<script>
$(function() {

<% if @current_layout.present? %>
   // preload the current layout and scheme
   var layout_image = new Image();
   layout_image.src = "<%= @current_layout.get_param("chooser_image").to_s %>";
   var current_scheme_image = new Image();
   current_scheme_image.src = "<%= @current_layout.get_param('schemes').h[@layout_scheme].h['thumbnail_image'].to_s %>"
<% end %>

   var layouts = <%= raw @layouts.to_json %>;
   $.each(layouts, function(index, layout) {
       if(layout['schemes'].length) {
           var selected_scheme = layout['schemes'][0]['id'];
           var template_item = $($("#template_item_template").text());
           template_item.attr("id", index).attr("template_guid", layout['guid']).attr("selected_scheme", selected_scheme);
           template_item.find(".template_item_image").css("opacity", "0.0").attr("src", layout['thumbnail_url']).load(function() {
           $(this).fadeTo("fast", 1.0)});
           template_item.find(".template_item_name").text(layout['name']);
	    $("div#template_list").append(template_item);
	    $("div#template_list").append(" ");
         }
    });

    // Generate the category tree/selector
    $("#category_list2").jstree({
        "themes" : {"no_load" : true, url:"/assets/themes/roxiware/style.css", theme:"roxiware", "icons":false, "dots":true},
        core: {"animation":100 },
        "html_data" : {
        },
        "ui" : {
           "select_limit" : 1,
           "selected_parent_close" : "select_parent",
            "initially_select" : [ "0" ]
        },

        "plugins" : [ "themes", "html_data", "ui" ]
    });

    $("#category_list2").bind("loaded.jstree", function () {
       $("#category_list").jstree("open_all");
    });

    // A category was selected, so collect all layouts that meet the criteria
    // and populate the template list with them
   $("#category_list2").bind("select_node.jstree", function(event, data) {
       $(".category_entry_selected").removeClass("category_entry_selected");
       $(this).addClass("category_entry_selected");
       var cat_id = parseInt(data.rslt.obj.attr("id"));
       if(!cat_id) {
           $(".template_item").css("display", "inline-block");
       }
       else {
           $.each(layouts, function(index, layout) {
              var template_item = $(".template_item[template_guid="+layout['guid']+"]");
 	      if ($.inArray(cat_id, layout['categories']) == -1) {
                  template_item.css("display", "none");
              }
              else {
                  template_item.css("display", "inline-block");
              }
           });
       }
    });

    $("button#preview_template").click(function() {
        window.open("<%= preview_server %>?preview="+$("#template_info").attr("template_guid")+","+$("#template_info").attr("selected_scheme"), "template_preview");
    });

    $(".template_item").click(function() {
       // a template item was clicked, so populate the template_info section
       var layout = layouts[parseInt($(this).attr("id"))];
       $("#template_info").attr("template_guid", $(this).attr("template_guid"));
       $("#template_info").attr("selected_scheme", $(this).attr("selected_scheme"));
       $("#template_info_name").text(layout['name']);
       $("#template_info_description").html(layout['description']);

       $("#template_info_schemes").html("");
       $("#template_info_scheme_dots").html("");
       $.each(layout['schemes'], function(index, layout_scheme) {
           var scheme_image = $("<div id='"+layout_scheme['id']+"' class='template_info_scheme'><img src='"+layout_scheme['thumbnail_image']+"'/><div class='template_info_scheme_name'>"+layout_scheme['name']+"</div></div>");
           scheme_image.find("img").css("opacity","0.0").load(function() {
               $(this).fadeTo("fast",1.0);
           });
           $("#template_info_schemes").append(scheme_image);
           $("#template_info_scheme_dots").append("<div id='nav_"+layout_scheme['id']+"' class='icon-radio-unchecked'></div>");
       });

       // left pane is a scroller of images
       var desired_item = $("div#"+$("#template_info").attr("selected_scheme")+".template_info_scheme");
       var selected_index = $(".template_info_scheme").index(desired_item);
       $("#template_info_scheme_dots").tabs($("#template_info_schemes > div"),{initialIndex: selected_index});
       var api = $("#template_info_scheme_dots").data("tabs");
       api.onClick(function(index) {
           $("#template_info").attr("selected_scheme", api.getCurrentPane().attr("id"));
       });
       $(".template_item_selected").removeClass("template_item_selected");
       $(this).addClass("template_item_selected");
   });

   //$(".category_entry").first().click();
<% if selected_template.present? %>
   <% if selected_scheme.present? %>
        $(".template_item[template_guid=<%=selected_template%>]").attr("selected_scheme", "<%= selected_scheme %>");
   <% end %>
   var scroll_var = $(".template_item").index($(".template_item[template_guid=<%=selected_template%>]"))*200;
   $("#template_list").prepend($(".template_item[template_guid=<%=selected_template%>]"));
   $(".template_item[template_guid=<%=selected_template%>]").click();
<% else %>
    $(".template_item").first().click();
<% end %>
});
</script>
